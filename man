#!/usr/bin/bash

function display
{
    if [ $debug == true ] ; then echo displaying MAN from file $p/$2 ; fi

    # First ungzip man file
    if [ "$3" == "gzip" ] ; then
        gzip -d -c $2 > $TMP/man$1.tmp
        file=$TMP/man$1.tmp
    else
        file=$2
    fi

    # Check if redirection
    IFS=" "
    read first second < "$file"
    if [ "$first" == ".so" ] ; then
        r=$second
    else
        r=
    fi

  if [ "$r" == "" ] ; then
      # No redirection then display it
      if [ "$SHELL" == "/bin/sh" ] ; then
          # SYS bash
          groff -Tascii -man "$file" | sed -r "s/\x1B\[2[24]m/\x1B\[0m/g" 2>/dev/null | less
      else
          # Git bash
          groff -Tascii -man "$file"
          #| sed -r "s/\x1B\[2[24]m/\x1B\[0m/g"
      fi
  else
    # redirection then recursive call
    if [ -e $r.gz ] ; then
      display 1 $r.gz gzip
    else
      display 1 $r
    fi
  fi
  if [ "$3" == "gzip" ] ; then
    rm $TMP/man$1.tmp
  fi

  exit
}

debug=false
if [ "$1" == "-d" ] ; then
    debug=true
    shift 1
fi
if [ "$1" == "--debug" ] ; then
    debug=true
    shift 1
fi
if [ -z "$2" ] ; then
  section=\*
  sectionlist="1 1p 8 2 3 3p 4 5 6 7 9 0p n l p o 1x 2x 3x 4x 5x 6x 7x 8x"
  page=$1
else
  section=$1
  sectionlist=$1
  page=$2
fi

if [ $debug == true ] ; then echo section=$section ; fi
if [ $debug == true ] ; then echo sectionlist=$sectionlist ; fi
if [ $debug == true ] ; then echo page=$page ; fi

IFS=:  ; set -o noglob
if [ -z "$MANPATH" ] ; then
  pathlist=
  for p in $PATH ; do
    IFS=
    if [ $debug == true ] ; then echo Checking ${p} ; fi

    # Under MinGW bash ...\MinGW\msys\1.0\bin maps to /usr/bin
    if [ ${p} == /usr/bin ] ; then
      if [ -d ${p/\/bin/\/share\/man} ] ; then
        pathlist=${pathlist}:${p/\/bin/\/share\/man}
      fi
    fi

    #Under MinGW bash ...\MinGW\bin maps to /mingw/bin
    if [ ${p} == /mingw/bin ] ; then
      if [ -d ${p/\/bin/\/share\/man} ] ; then
        pathlist=${pathlist}:${p/\/bin/\/share\/man}
      fi
    fi

    # MinGW under Git bash
    if [ ${p/\/MinGW\//} != ${p} ] ; then
      pathlist=${pathlist}:${p/\/bin/\/share\/man}
    fi

    # Works under MinGW and Git bash
    if [ ${p/\/GnuWin32\//} != ${p} ] ; then
      pathlist=${pathlist}:${p/\/bin/\/man}
    fi

    # Works under MinGW and Git bash
    if [ ${p/\/emacs-/} != ${p} ] ; then
      pathlist=${pathlist}:${p/\/bin/\/share\/man}
    fi
    IFS=:
  done
else
  pathlist=$MANPATH
fi
if [ $debug == true ] ; then echo pathlist=${pathlist} ; fi

IFS=:
for p in $pathlist ; do
  pushd "$p" >/dev/null
  if [ $debug == true ] ; then echo Searching directory $p ; fi
  IFS=" "
  for s in $sectionlist ; do
    if [ -d "man$s" ] ; then
      if [ $debug == true ] ; then echo trying directory man$s ; fi
      if [ -e "man$s/$page.$s.gz" ] ; then
        display 0 "man$s/$page.$s.gz" gzip
        popd >/dev/null
        exit 0
      elif [ -e "man$s/$page.$s" ] ; then
        display 0 "man$s/$page.$s"
        popd >/dev/null
        exit 0
      fi
      if [ "$sectionlist" != "$section" ] ; then
        if [ -e "man$s/$page.gz" ] ; then
          display 0 "man$s/$page.gz" gzip
          popd >/dev/null
          exit 0
        elif [ -e "man$s/$page" ] ; then
          display 0 "man$s/$page"
          popd >/dev/null
          exit 0
        fi
      fi
    fi
  done
  popd >/dev/null
done

if [ "$section" == "*" ] ; then
  echo No manual entry for $page
else
  echo No manual entry for $page in section $section
fi




